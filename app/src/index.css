@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 120 100% 50%;

    --card: 0 0% 5%;
    --card-foreground: 120 100% 50%;

    --popover: 0 0% 5%;
    --popover-foreground: 120 100% 50%;

    --primary: 120 100% 50%;
    --primary-foreground: 0 0% 0%;

    --secondary: 180 100% 50%;
    --secondary-foreground: 0 0% 0%;

    --muted: 0 0% 20%;
    --muted-foreground: 0 0% 60%;

    --accent: 300 100% 50%;
    --accent-foreground: 0 0% 0%;

    --destructive: 0 100% 50%;
    --destructive-foreground: 0 0% 100%;

    --border: 120 100% 25%;
    --input: 120 100% 25%;
    --ring: 120 100% 50%;

    --radius: 0rem;

    --terminal-green: 120 100% 50%;
    --terminal-cyan: 180 100% 50%;
    --terminal-magenta: 300 100% 50%;
    --terminal-yellow: 60 100% 50%;
    --terminal-red: 0 100% 50%;
    --terminal-blue: 240 100% 50%;
    --terminal-white: 0 0% 90%;

    --glow-green: 0 0 20px hsl(120 100% 50% / 0.5);
    --glow-cyan: 0 0 20px hsl(180 100% 50% / 0.5);
    --glow-magenta: 0 0 20px hsl(300 100% 50% / 0.5);
    --glow-yellow: 0 0 20px hsl(60 100% 50% / 0.5);
    --glow-red: 0 0 20px hsl(0 100% 50% / 0.5);
  }
}

@layer base {
  *,
  *::before,
  *::after {
    @apply border-border;
    box-sizing: border-box;
  }

  html,
  body,
  #root {
    height: 100%;
  }

  body {
    margin: 0;
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
    @apply bg-background text-foreground font-mono;
  }
}

@layer utilities {
  .border-border {
    border-color: hsl(var(--border));
  }

  .text-terminal-green {
    color: hsl(var(--terminal-green));
    text-shadow: var(--glow-green);
  }

  .text-terminal-cyan {
    color: hsl(var(--terminal-cyan));
    text-shadow: var(--glow-cyan);
  }

  .text-terminal-magenta {
    color: hsl(var(--terminal-magenta));
    text-shadow: var(--glow-magenta);
  }

  .text-terminal-yellow {
    color: hsl(var(--terminal-yellow));
    text-shadow: var(--glow-yellow);
  }

  .text-terminal-red {
    color: hsl(var(--terminal-red));
    text-shadow: var(--glow-red);
  }

  .text-terminal-white {
    color: hsl(var(--terminal-white));
  }

  @keyframes blink {

    0%,
    49% {
      opacity: 1;
    }

    50%,
    100% {
      opacity: 0;
    }
  }

  .cursor-blink {
    animation: blink 1s infinite;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .focus\:not-sr-only:focus {
    position: static;
    width: auto;
    height: auto;
    padding: inherit;
    margin: inherit;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }

  .font-mono {
    letter-spacing: 0;
    white-space: pre-wrap;
    overflow-wrap: break-word;
  }
}
