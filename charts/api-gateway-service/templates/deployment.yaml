apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-gateway-service.fullname" . }}
  labels:
    {{- include "api-gateway-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api-gateway-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api-gateway-service.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "api-gateway-service.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: api-gateway-service
          {{- $imageTag := .Values.image.tag | default "" | trim }}
          {{- $imageRepo := .Values.image.repository | default "" }}
          {{- $imageRegistry := .Values.image.registry | default "" | trimSuffix "/" }}
          {{- $needsRegistry := and (ne $imageRegistry "") (not (hasPrefix (printf "%s/" $imageRegistry) $imageRepo)) }}
          {{- $fullRepo := ternary (printf "%s/%s" $imageRegistry (trimPrefix "/" $imageRepo)) $imageRepo $needsRegistry }}
          {{- if $imageTag }}
          image: "{{ $fullRepo }}:{{ $imageTag }}"
          {{- else }}
          image: "{{ $fullRepo }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PORT
              value: "{{ .Values.service.port }}"
            - name: RADIO_SERVICE_URL
              value: "http://{{ .Values.radioService.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.radioService.port }}"
            - name: TERMINAL_SERVICE_URL
              value: "http://{{ .Values.terminalService.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.terminalService.port }}"
            {{- if .Values.serviceAuth.value }}
            - name: SERVICE_AUTH_TOKEN
              value: "{{ .Values.serviceAuth.value }}"
            - name: STATIONS_REFRESH_TOKEN
              value: "{{ .Values.serviceAuth.value }}"
            {{- else if .Values.serviceAuth.existingSecret }}
            - name: SERVICE_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceAuth.existingSecret }}
                  key: {{ default "SERVICE_AUTH_TOKEN" .Values.serviceAuth.secretKey }}
            - name: STATIONS_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.serviceAuth.existingSecret }}
                  key: {{ default "STATIONS_REFRESH_TOKEN" .Values.serviceAuth.secretKey }}
            {{- end }}
            {{- if .Values.allowOrigins }}
            - name: CORS_ALLOW_ORIGINS
              value: "{{ join "," .Values.allowOrigins }}"
            {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
