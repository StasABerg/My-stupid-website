name: terminal-ci-cd

on:
  push:
    branches: [ main ]
    paths:
      - 'terminal-service/**'
      - 'docker/terminal.Dockerfile'
      - 'charts/my-stupid-website/values-terminal.yaml'
      - 'charts/my-stupid-website/values-terminal-dev.yaml'
      - '.github/workflows/ssh-terminal.yaml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: terminal-ci-cd-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  trivy-dockerfile:
    name: Trivy Dockerfile (terminal)
    runs-on: self-hosted
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 }
      - uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-terminal-dockerfile-${{ runner.os }}-${{ github.run_id }}
          restore-keys: trivy-terminal-dockerfile-${{ runner.os }}-
      - name: Scan terminal Dockerfile
        id: trivy
        continue-on-error: true
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: config
          scan-ref: docker/terminal.Dockerfile
          severity: "HIGH,CRITICAL"
          format: "sarif"
          output: "trivy-terminal-dockerfile.sarif"
          exit-code: "1"
      - name: Upload SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-terminal-dockerfile.sarif
      - name: Fail if Trivy found issues
        if: steps.trivy.outcome == 'failure'
        run: exit 1

  build:
    runs-on: self-hosted
    needs: trivy-dockerfile
    outputs:
      sha: ${{ steps.meta.outputs.sha }}
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Record image tag
        id: meta
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
      - name: Build & push terminal image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/terminal.Dockerfile
          push: true
          tags: |
            ghcr.io/stasaberg/my-stupid-website-terminal:${{ steps.meta.outputs.sha }}
            ghcr.io/stasaberg/my-stupid-website-terminal:latest
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  trivy-image:
    name: Trivy Image (terminal)
    runs-on: self-hosted
    needs: build
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-terminal-image-${{ runner.os }}-${{ github.run_id }}
          restore-keys: trivy-terminal-image-${{ runner.os }}-
      - name: Scan built terminal image
        id: trivy
        continue-on-error: true
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ghcr.io/stasaberg/my-stupid-website-terminal:${{ needs.build.outputs.sha }}
          vuln-type: "os,library"
          ignore-unfixed: true
          severity: "HIGH,CRITICAL"
          format: "sarif"
          output: "trivy-terminal-image.sarif"
          exit-code: "1"
      - name: Upload SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-terminal-image.sarif
      - name: Fail if Trivy found issues
        if: steps.trivy.outcome == 'failure'
        run: exit 1

  deploy-dev:
    runs-on: self-hosted
    needs: [build, trivy-image]
    if: needs.build.result == 'success' && needs.trivy-image.result == 'success'
    environment: development
    steps:
      - uses: actions/checkout@v5
      - uses: azure/setup-helm@v4
      - name: Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/kubeconfig
          chmod 600 $HOME/kubeconfig
          echo "KUBECONFIG=$HOME/kubeconfig" >> $GITHUB_ENV
      - name: Helm upgrade (dev - terminal)
        run: |
          helm upgrade --install my-stupid-website-dev charts/my-stupid-website \
            -f charts/my-stupid-website/values-dev.yaml \
            -f charts/my-stupid-website/values-terminal.yaml \
            -f charts/my-stupid-website/values-terminal-dev.yaml \
            --namespace my-stupid-website-dev --create-namespace \
            --reuse-values \
            --set terminalService.image.repository=ghcr.io/stasaberg/my-stupid-website-terminal \
            --set-string terminalService.image.tag=${{ needs.build.outputs.sha }} \
            --atomic --wait --kube-insecure-skip-tls-verify

  deploy-prod:
    runs-on: self-hosted
    needs: [build, trivy-image, deploy-dev]
    if: needs.deploy-dev.result == 'success' && needs.build.result == 'success' && needs.trivy-image.result == 'success'
    environment: production
    steps:
      - uses: actions/checkout@v5
      - uses: azure/setup-helm@v4
      - name: Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/kubeconfig
          chmod 600 $HOME/kubeconfig
          echo "KUBECONFIG=$HOME/kubeconfig" >> $GITHUB_ENV
      - name: Helm upgrade (prod - terminal)
        run: |
          helm upgrade --install my-stupid-website charts/my-stupid-website \
            -f charts/my-stupid-website/values-terminal.yaml \
            --namespace my-stupid-website --create-namespace \
            --reuse-values \
            --set terminalService.image.repository=ghcr.io/stasaberg/my-stupid-website-terminal \
            --set-string terminalService.image.tag=${{ needs.build.outputs.sha }} \
            --atomic --wait --kube-insecure-skip-tls-verify
