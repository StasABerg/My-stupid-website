name: api-gateway-service

on:
  push:
    branches:
      - main
    paths:
      - 'api-gateway-service/**'
      - 'docker/api-gateway.Dockerfile'
      - 'charts/api-gateway-service/**'
      - '.github/workflows/api-gateway.yaml'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch or ref to deploy'
        required: true
        default: main

permissions:
  contents: read
  packages: write

concurrency:
  group: api-gateway-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref_name }}
  cancel-in-progress: true

env:
  CHECKOUT_REF: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}

jobs:
  trivy-dockerfile:
    name: Trivy Dockerfile
    runs-on: self-hosted
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.CHECKOUT_REF }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-${{ github.run_id }}
          restore-keys: trivy-db-${{ runner.os }}-
      - name: Scan Dockerfile misconfig
        id: trivy
        continue-on-error: true
        uses: aquasecurity/trivy-action@0.33.1
        with:
          version: v0.67.2
          scan-type: config
          scan-ref: docker/api-gateway.Dockerfile
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: trivy-api-gateway-dockerfile.sarif
      - name: Upload SARIF
        if: ${{ always() && hashFiles('trivy-api-gateway-dockerfile.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-api-gateway-dockerfile.sarif

  build:
    runs-on: self-hosted
    needs: trivy-dockerfile
    outputs:
      sha: ${{ steps.out.outputs.sha }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.CHECKOUT_REF }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: out
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/api-gateway.Dockerfile
          push: true
          tags: |
            ghcr.io/stasaberg/api-gateway-service:${{ steps.out.outputs.sha }}
            ghcr.io/stasaberg/api-gateway-service:latest
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  trivy-image:
    name: Trivy Image
    runs-on: self-hosted
    needs: build
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-${{ github.run_id }}
          restore-keys: trivy-db-${{ runner.os }}-
      - name: Scan built image
        id: trivy
        continue-on-error: true
        uses: aquasecurity/trivy-action@0.33.1
        with:
          version: v0.67.2
          image-ref: ghcr.io/stasaberg/api-gateway-service:${{ needs.build.outputs.sha }}
          vuln-type: 'os,library'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: trivy-api-gateway-image.sarif
      - name: Upload SARIF
        if: ${{ always() && hashFiles('trivy-api-gateway-image.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-api-gateway-image.sarif

  deploy-dev:
    runs-on: self-hosted
    needs: [build, trivy-image]
    if: needs.build.result == 'success' && needs.trivy-image.result == 'success'
    environment: development
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.CHECKOUT_REF }}
      - uses: azure/setup-helm@v4
      - name: Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/kubeconfig
          chmod 600 $HOME/kubeconfig
          echo "KUBECONFIG=$HOME/kubeconfig" >> $GITHUB_ENV
      - name: Helm upgrade (dev - api gateway)
        run: |
          helm upgrade --install my-stupid-website-api charts/api-gateway-service \
            -f charts/api-gateway-service/values-dev.yaml \
            --namespace my-stupid-website-dev --create-namespace \
            --set image.repository=ghcr.io/stasaberg/api-gateway-service \
            --set-string image.tag=${{ needs.build.outputs.sha }} \
            --atomic --wait --kube-insecure-skip-tls-verify

  deploy-prod:
    runs-on: self-hosted
    needs: [build, trivy-image, deploy-dev]
    if: needs.deploy-dev.result == 'success' && needs.build.result == 'success' && needs.trivy-image.result == 'success'
    environment: production
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.CHECKOUT_REF }}
      - uses: azure/setup-helm@v4
      - name: Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/kubeconfig
          chmod 600 $HOME/kubeconfig
          echo "KUBECONFIG=$HOME/kubeconfig" >> $GITHUB_ENV
      - name: Helm upgrade (prod - api gateway)
        run: |
          helm upgrade --install my-stupid-website-api charts/api-gateway-service \
            --namespace my-stupid-website --create-namespace \
            --set image.repository=ghcr.io/stasaberg/api-gateway-service \
            --set-string image.tag=${{ needs.build.outputs.sha }} \
            --atomic --wait --kube-insecure-skip-tls-verify
