#testing
name: ci-cd
on:
  push:
    branches: [ main ]
  workflow_dispatch:
permissions:
  contents: read
  packages: write

jobs:
  changes:
    runs-on: self-hosted
    outputs:
      app: ${{ steps.f.outputs.app }}
      charts: ${{ steps.f.outputs.charts }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - id: f
        uses: dorny/paths-filter@v3
        with:
          filters: |
            app:
              - 'app/**'
              - 'docker/**'
              - 'Dockerfile'
              - '.dockerignore'
              - 'package.json'
              - 'package-lock.json'
            charts:
              - 'charts/**'
              - 'deploy/**'
              - '.github/workflows/**'

  build:
    runs-on: self-hosted
    needs: changes
    if: needs.changes.outputs.app == 'true'
    outputs:
      sha: ${{ steps.out.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: out
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ghcr.io/stasaberg/my-stupid-website:${{ steps.out.outputs.sha }}
            ghcr.io/stasaberg/my-stupid-website:latest
          provenance: false

  deploy-dev:
    runs-on: self-hosted
    needs: [changes, build]
    environment: development
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
      - name: Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/kubeconfig
          chmod 600 $HOME/kubeconfig
          echo "KUBECONFIG=$HOME/kubeconfig" >> $GITHUB_ENV
      - name: Resolve image tag
        id: tag
        run: |
          if [[ "${{ needs.changes.outputs.app }}" == "true" && -n "${{ needs.build.outputs.sha }}" ]]; then
            echo "tag=${{ needs.build.outputs.sha }}" >> "$GITHUB_OUTPUT"
          else
            TAG=$(helm -n my-stupid-website-dev get values my-stupid-website-dev -o yaml \
              | awk '/^image:/{f=1} f && /^  tag:/{print $2; exit}')
            if [[ -z "$TAG" ]]; then
              echo "No current tag found"; exit 1
            fi
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          fi
      - name: Helm upgrade (dev)
        run: |
          helm upgrade --install my-stupid-website-dev charts/my-stupid-website \
            -f charts/my-stupid-website/values-dev.yaml \
            --namespace my-stupid-website-dev --create-namespace \
            --set image.repository=ghcr.io/stasaberg/my-stupid-website \
            --set image.tag=${{ steps.tag.outputs.tag }} \
            --atomic --wait --kube-insecure-skip-tls-verify

  deploy-prod:
    runs-on: self-hosted
    needs: [changes, build, deploy-dev]
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
      - name: Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/kubeconfig
          chmod 600 $HOME/kubeconfig
          echo "KUBECONFIG=$HOME/kubeconfig" >> $GITHUB_ENV
      - name: Resolve image tag
        id: tag
        run: |
          if [[ "${{ needs.changes.outputs.app }}" == "true" && -n "${{ needs.build.outputs.sha }}" ]]; then
            echo "tag=${{ needs.build.outputs.sha }}" >> "$GITHUB_OUTPUT"
          else
            TAG=$(helm -n my-stupid-website-dev get values my-stupid-website-dev -o yaml \
              | awk '/^image:/{f=1} f && /^  tag:/{print $2; exit}')
            if [[ -z "$TAG" ]]; then
              echo "No current tag found"; exit 1
            fi
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          fi
      - name: Helm upgrade (prod)
        run: |
          helm upgrade --install my-stupid-website charts/my-stupid-website \
            --namespace my-stupid-website --create-namespace \
            --set image.repository=ghcr.io/stasaberg/my-stupid-website \
            --set image.tag=${{ steps.tag.outputs.tag }} \
            --atomic --wait --kube-insecure-skip-tls-verify
